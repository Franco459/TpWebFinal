{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/header/header.component.css","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/principal/principal.component.css","webpack:///./src/app/components/principal/principal.component.html","webpack:///./src/app/components/principal/principal.component.ts","webpack:///./src/app/componetns/alta-vehiculo/alta-vehiculo.component.css","webpack:///./src/app/componetns/alta-vehiculo/alta-vehiculo.component.html","webpack:///./src/app/componetns/alta-vehiculo/alta-vehiculo.component.ts","webpack:///./src/app/componetns/ausuarios/ausuarios.component.css","webpack:///./src/app/componetns/ausuarios/ausuarios.component.html","webpack:///./src/app/componetns/ausuarios/ausuarios.component.ts","webpack:///./src/app/componetns/login/login.component.css","webpack:///./src/app/componetns/login/login.component.html","webpack:///./src/app/componetns/login/login.component.ts","webpack:///./src/app/componetns/muestra-vehiculos/muestra-vehiculos.component.css","webpack:///./src/app/componetns/muestra-vehiculos/muestra-vehiculos.component.html","webpack:///./src/app/componetns/muestra-vehiculos/muestra-vehiculos.component.ts","webpack:///./src/app/componetns/novedades/novedades.component.css","webpack:///./src/app/componetns/novedades/novedades.component.html","webpack:///./src/app/componetns/novedades/novedades.component.ts","webpack:///./src/app/componetns/reserva/reserva.component.css","webpack:///./src/app/componetns/reserva/reserva.component.html","webpack:///./src/app/componetns/reserva/reserva.component.ts","webpack:///./src/app/models/novedad.ts","webpack:///./src/app/models/reserva.ts","webpack:///./src/app/models/usuario.ts","webpack:///./src/app/models/vehiculo.ts","webpack:///./src/app/rutas.module.ts","webpack:///./src/app/services/authservice.ts","webpack:///./src/app/services/novedadservice.ts","webpack:///./src/app/services/reservaservice.ts","webpack:///./src/app/services/usuarioservice.ts","webpack:///./src/app/services/vehicleservice.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,+E;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACW;AAQrD;IANA;QAOE,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,SAAS,EAAE,CAAE,iEAAW,CAAE;SAC3B,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AAEM;AACqB;AACuB;AACY;AACvB;AACrC;AACa;AACX;AACF;AAC4B;AAClB;AACA;AAC2B;AACA;AACN;AAoB1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,gFAAc;gBACd,uGAAqB;gBACrB,mHAAyB;gBACzB,4FAAkB;gBAClB,oFAAe;gBACf,6FAAkB;gBAClB,6FAAkB;gBAClB,uFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa,EAAE,wDAAU,EAAE,qEAAgB,EAAE,0DAAW,EAAE,wDAAS,EAAE,mEAAe;aACrF;YACD,SAAS,EAAE,CAAE,kEAAW,CAAC;YACzB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrCtB,mB;;;;;;;;;;;ACAA,uoEAAuoE,sCAAsC,opB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3nE;AACO;AAChB;AAOzC;IAKE,yBAAmB,qBAAiC,EAAU,MAAc;QAAzD,0BAAqB,GAArB,qBAAqB,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF5E,oBAAe,GAAG,EAAE,CAAC;QAGnB,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEjE,CAAC;IAPD,kCAAQ,GAAR;IACA,CAAC;IASD,gCAAM,GAAN;QAEE,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAC3C,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAjBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAMyC,iEAAW,EAAkB,sDAAM;OALjE,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;;;;;ACT5B,mB;;;;;;;;;;;ACAA,mLAAmL,WAAW,GAAG,YAAY,s0BAAs0B,q/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj+B;AACD;AACc;AACA;AAChB;AACU;AAUzD;IAKE,4BAAoB,cAA6B,EAAU,cAA8B,EAAS,WAAwB;QAAtG,mBAAc,GAAd,cAAc,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QACxH,IAAI,CAAC,eAAe,GAAG,IAAI,KAAK,EAAY,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,yDAAQ,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,4CAAe,GAAf;QAAA,iBAWC;QATC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CACzC,gBAAM;YACJ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAClD,GAAG,EAAY,UAAkB,EAAlB,UAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;gBAA7B,IAAI,GAAG;gBAET,EAAE,EAAC,GAAG,CAAC,UAAU,CAAC;oBAAC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnD;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+CAAkB,GAAlB,UAAmB,GAAY;QAE7B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IACxB,CAAC;IACD,2CAAc,GAAd;QAEE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,WAAW,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACvD,cAAI;YAEF,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,0GAA0G,CAAC,CAAC;QACtI,CAAC,CACF,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IA5CU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAE,uEAAc,EAAE,uEAAc,CAAE;SAC9C,CAAC;yCAMmC,uEAAc,EAA0B,uEAAc,EAAsB,iEAAW;OAL/G,kBAAkB,CA8C9B;IAAD,yBAAC;CAAA;AA9C8B;;;;;;;;;;;;ACf/B,mB;;;;;;;;;;;ACAA,+kEAA+kE,QAAQ,uBAAuB,aAAa,uBAAuB,WAAW,uBAAuB,YAAY,85BAA85B,ugD;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5iG;AACD;AACc;AAS/D;IAKE,+BAAoB,UAAyB;QAAzB,eAAU,GAAV,UAAU,CAAe;QAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,yDAAQ,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,yDAAQ,EAAE,CAAC;IAEnC,CAAC;IAED,8CAAc,GAAd,UAAe,GAAY;QAA3B,iBAQC;QAPC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAC7C,cAAI;YAEF,KAAI,CAAC,eAAe,EAAE,CAAC;YACvB,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,uEAAuE,GAAG,GAAG,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC;QACxH,CAAC,CACF,CAAC;IACJ,CAAC;IACD,6CAAa,GAAb;QAAA,iBAYC;QAVC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACvD,gBAAM;YACJ,KAAI,CAAC,eAAe,EAAE,CAAC;YACvB,CAAC,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,0EAA0E,GAAG,KAAI,CAAC,UAAU,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC;QAE1I,CAAC,EACD,eAAK;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IACD,4CAAY,GAAZ,UAAa,GAAY;QAEvB,IAAI,CAAC,UAAU,GAAG,IAAI,yDAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;IAC7G,CAAC;IAED,+CAAe,GAAf;QAAA,iBAUC;QARC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CACrC,gBAAM;YACJ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC,EACD,eAAK;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IACD,+CAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACvD,cAAI;YAEF,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,EACD,eAAK;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IACD,wCAAQ,GAAR;IACA,CAAC;IA9DU,qBAAqB;QANjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;YAG7B,SAAS,EAAE,CAAE,uEAAc,CAAE;SAC9B,CAAC;yCAM+B,uEAAc;OALlC,qBAAqB,CAgEjC;IAAD,4BAAC;CAAA;AAhEiC;;;;;;;;;;;;ACXlC,mB;;;;;;;;;;;ACAA,swIAAswI,gBAAgB,yBAAyB,gBAAgB,yBAAyB,cAAc,yBAAyB,aAAa,yBAAyB,YAAY,yBAAyB,eAAe,yBAAyB,eAAe,6lCAA6lC,g6G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5iL;AACH;AACgB;AAU/D;IAME,4BAAoB,WAA0B;QAA1B,gBAAW,GAAX,WAAW,CAAe;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAO,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAO,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAEF,2CAAc,GAAd;QAAA,iBASC;QAPC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACvD,gBAAM;YACJ,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,yEAAyE,CAAC,CAAC;QACtG,CAAC,CACF,CAAC;IAEJ,CAAC;IACD,8CAAiB,GAAjB;QAAA,iBAUC;QARC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACvD,cAAI;YAEF,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,CAAC,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,8DAA8D,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,GAAE,UAAU,CAAC,CAAC;QAEpI,CAAC,CACF,CAAC;IACJ,CAAC;IACD,0CAAa,GAAb,UAAc,GAAW;QAAzB,iBAYC;QAVC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAC7C,cAAI;YACF,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,0DAA0D,GAAG,GAAG,CAAC,OAAO,GAAE,UAAU,CAAC,CAAC;YAC9G,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EACD,eAAK;QAGL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAgB,GAAhB,UAAiB,GAAW;QAE1B,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAO,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5I,CAAC;IACD,2CAAc,GAAd;QAAA,iBAYC;QAVC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CACrC,gBAAM;YAEJ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,EACD,eAAK;YAEH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,qCAAQ,GAAR;IACA,CAAC;IAjEU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAE,uEAAc,CAAE;SAC9B,CAAC;yCAOgC,uEAAc;OANnC,kBAAkB,CAmE9B;IAAD,yBAAC;CAAA;AAnE8B;;;;;;;;;;;;ACZ/B,mB;;;;;;;;;;;ACAA,uvC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACA;AACV;AAQ/C;IAIE,wBAAoB,KAAoB,EAAU,MAAc,EAAU,WAAuB;QAA7E,UAAK,GAAL,KAAK,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAY;QAHjG,cAAS,GAAQ,EAAE,CAAC;QACpB,oBAAe,GAAG,EAAE,CAAC;QAGnB,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAEpC,CAAC;IAGD,sCAAa,GAAb;QAAA,iBA4BC;QA1BC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChF,cAAI;YAEF,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,EAAE,EAAC,IAAI,CAAC,CACR,CAAC;gBACC,EAAE,EAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAC;oBACtB,KAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC;oBACrC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC9D,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC5C,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;oBACtC,KAAI,CAAC,WAAW,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAChD,KAAI,CAAC,WAAW,CAAC,eAAe,GAAG,IAAI,uDAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;oBAChK,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;gBAChC,CAAC;gBACD,IAAI,CACJ,CAAC;oBACC,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,2EAA2E,CAAC,CAAC;gBACtG,CAAC;YACH,CAAC;QACH,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACvE,CAAC;IA3CU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAK0B,8DAAc,EAAkB,sDAAM,EAAsB,iEAAW;OAJtF,cAAc,CA8C1B;IAAD,qBAAC;CAAA;AA9C0B;;;;;;;;;;;;ACX3B,mB;;;;;;;;;;;ACAA,8C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,4CAAQ,GAAR;IACA,CAAC;IALU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;;OACW,yBAAyB,CAOrC;IAAD,gCAAC;CAAA;AAPqC;;;;;;;;;;;;ACPtC,wEAAwE,yBAAyB,KAAK,eAAe,qBAAqB,KAAK,C;;;;;;;;;;;ACA/I,02CAA02C,qBAAqB,2BAA2B,WAAW,2BAA2B,YAAY,gP;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA15C;AACH;AACgB;AACN;AASzD;IAIE,4BAAoB,cAA6B,EAAS,WAAuB;QAA7D,mBAAc,GAAd,cAAc,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAY;QAC/E,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAO,EAAE,CAAC;IAEjC,CAAC;IACF,4CAAe,GAAf;QAAA,iBAQC;QANC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CACxC,gBAAM;YAEJ,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACrD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2CAAc,GAAd,UAAe,GAAW;QAExB,GAAG,CAAC,MAAM,GAAG,WAAW,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,SAAS,CAC9C,gBAAM;YAEJ,CAAC,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,uEAAuE,GAAG,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;QACzH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2CAAc,GAAd;QAEE,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC1D,gBAAM;YACJ,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;QAC5F,CAAC,CAAE,CAAC;IAER,CAAC;IACD,qCAAQ,GAAR;IACA,CAAC;IAxCU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAE,uEAAc,CAAC;SAC7B,CAAC;yCAKmC,uEAAc,EAAqB,iEAAW;OAJtE,kBAAkB,CA0C9B;IAAD,yBAAC;CAAA;AA1C8B;;;;;;;;;;;;ACZ/B,mB;;;;;;;;;;;ACAA,giBAAgiB,cAAc,6XAA6X,YAAY,olFAAolF,qBAAqB,yBAAyB,qBAAqB,yBAAyB,gBAAgB,yBAAyB,gBAAgB,yBAAyB,UAAU,yBAAyB,YAAY,+lCAA+lC,0gBAA0gB,cAAc,yZAAyZ,YAAY,00D;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAltL;AAGH;AACgB;AACA;AACA;AAS/D;IASE,0BAAoB,WAA0B,EAAU,cAA6B,EAAU,UAAyB;QAApG,gBAAW,GAAX,WAAW,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAe;QAAU,eAAU,GAAV,UAAU,CAAe;QACtH,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAO,EAAE,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAO,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGD,wCAAa,GAAb,UAAc,GAAW;QAAzB,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,SAAS,CAChD,cAAI;YAEF,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,yDAAyD,GAAG,KAAI,CAAC,UAAU,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;YACnH,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,4CAAiB,GAAjB;QAAA,iBAuBC;QArBC,IAAI,GAAY,CAAC;QACjB,IAAI,IAAY,CAAC;QACjB,GAAG,EAAQ,UAAkB,EAAlB,SAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;YAAzB,GAAG;YAEL,EAAE,EAAC,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;gBAAC,KAAK,CAAC;SAChC;QACD,GAAG,EAAS,UAAkB,EAAlB,SAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;YAA1B,IAAI;YAEN,EAAE,EAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC;gBAAC,KAAK,CAAC;SACrC;QACD,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,GAAG,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC1D,cAAI;YAEF,CAAC,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,sEAAsE,GAAG,KAAI,CAAC,UAAU,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;YACnI,KAAI,CAAC,cAAc,EAAE,CAAC;QAExB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2CAAgB,GAAhB,UAAiB,GAAW;QAE1B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IACxB,CAAC;IAED,yCAAc,GAAd;QAAA,iBAsBC;QApBC,IAAI,GAAY,CAAC;QACjB,IAAI,IAAY,CAAC;QACjB,GAAG,EAAQ,UAAkB,EAAlB,SAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;YAAzB,GAAG;YAEL,EAAE,EAAC,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC;gBAAC,KAAK,CAAC;SAChC;QACD,GAAG,EAAS,UAAkB,EAAlB,SAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;YAA1B,IAAI;YAEN,EAAE,EAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC;gBAAC,KAAK,CAAC;SACrC;QACD,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,GAAG,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC1D,gBAAM;YAEJ,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,sEAAsE,CAAC,CAAC;YACjG,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,yCAAc,GAAd;QAAA,iBAYC;QAVC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CACxC,gBAAM;YAEJ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,EACD,eAAK;YAEH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IACD,0CAAe,GAAf;QAAA,iBAUC;QARC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CACrC,gBAAM;YACJ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC,EACD,eAAK;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IACD,yCAAc,GAAd;QAAA,iBAYC;QAVC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CACrC,gBAAM;YAEJ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,EACD,eAAK;YAEH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAxHU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,SAAS,EAAE,CAAE,uEAAc,EAAE,uEAAc,EAAE,uEAAc,CAAC;SAC7D,CAAC;yCAUgC,uEAAc,EAAyB,uEAAc,EAAqB,uEAAc;OAT7G,gBAAgB,CA0H5B;IAAD,uBAAC;CAAA;AA1H4B;;;;;;;;;;;;;;ACb7B;AAAA;IAQI,iBAAY,EAAW,EAAE,OAAiB,EAAE,KAAc,EAAE,MAAe;QACvE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACdD;AAAA;IAUI,iBAAY,EAAW,EAAC,OAAiB,EAAE,QAAmB,EAAE,IAAa,EAAE,UAAmB,EAAC,UAAiB,EAAE,MAAe;QAEjI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACxBD;AAAA;IAaI,iBAAY,EAAU,EAAE,QAAiB,EAAE,OAAgB,EAAE,GAAY,EAAE,KAAc,EAAC,QAAiB,EAAE,OAAgB,EAAE,QAAiB,EAAE,MAAe;QAE7J,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACzBD;AAAA;IAQI,kBAAY,EAAW,EAAE,OAAgB,EAAE,KAAc,EAAE,MAAe,EAAE,UAAmB,EAAE,UAAoB;QAEjH,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAE,UAAU,CAAC;IAEhC,CAAC;IAGL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACnBsD;AACyB;AACZ;AACuB;AACX;AACA;AACN;AAK1E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,4FAAkB,EAAC;IAC1C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uGAAqB,EAAC;IACtD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAkB,EAAC;IAClD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAC,4FAAkB,EAAC;IAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAC,sFAAgB,EAAC;CAC/C,CAAC;AAEK,IAAM,SAAS,GAAG,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBX;AAEa;AAEzB;AAI/B;IAKE,qBAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;QAJ7B,iBAAY,GAAa,KAAK,CAAC;IAIE,CAAC;IAElC,2BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAqE,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;aACnJ,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChC,CAAC;IAED,4BAAM,GAAN;QACI,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAE9B,CAAC;IAjBU,WAAW;QADvB,gEAAU,EAAE;yCAMc,kDAAI;OALlB,WAAW,CAmBvB;IAAD,kBAAC;CAAA;AAnBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRmB;AAC2B;AACvC;AAI/B;IACI,wBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;IAE/B,CAAC;IACD,mCAAU,GAAV;QAEI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5G,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACjB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAA4D,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3I,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QAEnB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,yDAAyD,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO;QAC9F,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACpF,CAAC;IAED,wCAAe,GAAf,UAAgB,OAAO;QAErB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAI,OAAO,GAAG,yDAAyD,GAAC,OAAO,CAAC,EAAE,CAAC;QACnF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChF,CAAC;IAjCQ,cAAc;QAD1B,gEAAU,EAAE;yCAEkB,kDAAI;OADtB,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgB;AAC2B;AACvC;AAI/B;IACI,wBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;IAE/B,CAAC;IACD,mCAAU,GAAV;QAEI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,yDAAyD,CAAC;aAC/E,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACjB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAA4D,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3I,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QAEnB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,yDAAyD,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO;QAC9F,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACpF,CAAC;IACD,wCAAe,GAAf,UAAgB,OAAO;QAErB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAI,OAAO,GAAG,yDAAyD,GAAC,OAAO,CAAC,EAAE,CAAC;QACnF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChF,CAAC;IAjCQ,cAAc;QAD1B,gEAAU,EAAE;yCAEkB,kDAAI;OADtB,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgB;AAC2B;AACvC;AAI/B;IACI,wBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;IAE/B,CAAC;IACD,mCAAU,GAAV;QAEI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,yDAAyD,CAAC;aAC/E,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACjB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,4DAA4D,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3I,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QAEnB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,OAAO,GAAG,yDAAyD,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO;QAC9F,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACpF,CAAC;IAED,wCAAe,GAAf,UAAgB,OAAO;QAErB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAI,OAAO,GAAG,yDAAyD,GAAC,OAAO,CAAC,EAAE,CAAC;QACnF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChF,CAAC;IAlCQ,cAAc;QAD1B,gEAAU,EAAE;yCAEkB,kDAAI;OADtB,cAAc,CAqC1B;IAAD,qBAAC;CAAA;AArC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgB;AAC2B;AACvC;AAI/B;IACI,wBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;IAE/B,CAAC;IACD,oCAAW,GAAX;QAEI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,0DAA0D,CAAC;aAChF,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,uCAAc,GAAd,UAAe,QAAQ;QACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,6DAA6D,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5I,CAAC;IAED,uCAAc,GAAd,UAAe,QAAQ;QAErB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,0DAA0D,GAAG,QAAQ,CAAC,EAAE,GAAG,OAAO;QAChG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACpF,CAAC;IACD,yCAAgB,GAAhB,UAAiB,QAAQ;QAEvB,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEpC,IAAI,OAAO,GAAG,0DAA0D,GAAC,QAAQ,CAAC,EAAE,CAAC;QACrF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChF,CAAC;IAjCQ,cAAc;QAD1B,gEAAU,EAAE;yCAEkB,kDAAI;OADtB,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;;;ACN3B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/authservice';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [ AuthService ]\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './componetns/login/login.component';\r\nimport { AltaVehiculoComponent } from './componetns/alta-vehiculo/alta-vehiculo.component';\r\nimport { MuestraVehiculosComponent } from './componetns/muestra-vehiculos/muestra-vehiculos.component';\r\nimport { PrincipalComponent } from './components/principal/principal.component';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Rutas_App } from './rutas.module';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { AuthService } from './services/authservice';\r\nimport { DataTableModule } from 'angular2-datatable';\r\nimport { AusuariosComponent } from './componetns/ausuarios/ausuarios.component';\r\nimport { NovedadesComponent } from './componetns/novedades/novedades.component';\r\nimport { ReservaComponent } from './componetns/reserva/reserva.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AltaVehiculoComponent,\r\n    MuestraVehiculosComponent,\r\n    PrincipalComponent,\r\n    HeaderComponent,\r\n    AusuariosComponent,\r\n    NovedadesComponent,\r\n    ReservaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, HttpModule, HttpClientModule, FormsModule, Rutas_App, DataTableModule\r\n  ],\r\n  providers: [ AuthService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-md navbar-dark bg-danger\\\">\\r\\n    <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Concesionario</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsingNavbar\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"navbar-collapse collapse\\\" id=\\\"collapsingNavbar\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n          <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['']\\\">Principal</a>\\r\\n            </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"!authenticationService.userLoggedIn\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['login']\\\">LOGIN</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"authenticationService.userLoggedIn && authenticationService.perfil == 'administrativo'\\\" >\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['ausuarios']\\\">Usuarios</a>\\r\\n          </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"  *ngIf=\\\"authenticationService.userLoggedIn\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['novedades']\\\">Novedades</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"authenticationService.userLoggedIn && authenticationService.perfil == 'administrativo'\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['vehiculos']\\\">vehiculos</a>\\r\\n          </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"authenticationService.userLoggedIn && authenticationService.perfil == 'administrativo'\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['reserva']\\\">Reservas</a>\\r\\n        </li>\\r\\n        \\r\\n      </ul>\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\" *ngIf=\\\"authenticationService.userLoggedIn\\\">\\r\\n        <li class=\\\"nav-item dropdown\\\">\\r\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"dropdownLogueado\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{authenticationService.nombreLogueado}}</a>\\r\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownLogueado\\\">\\r\\n            <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Cerrar sesión</a>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n<!--\\r\\n  *ngIf=\\\"authenticationService.userLoggedIn && authenticationService.perfil == 'administrador'\\\"\\r\\n*ngIf=\\\"authenticationService.userLoggedIn && authenticationService.perfil != 'cliente'\\\"\\r\\n*ngIf=\\\"authenticationService.userLoggedIn && authenticationService.perfil == 'administrador'\\\"\\r\\n*ngIf=\\\"authenticationService.userLoggedIn && authenticationService.perfil == 'administrador'\\\"-->\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/authservice';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  ngOnInit(): void {\r\n  }\r\n  usuarioLogueado = {};\r\n  \r\n  constructor(public authenticationService:AuthService, private router: Router) { \r\n    this.usuarioLogueado = localStorage.getItem(\"usuarioLogueado\");\r\n\r\n  }\r\n\r\n\r\n  logout()\r\n  {\r\n    localStorage.removeItem(\"usuarioLogueado\");\r\n    this.authenticationService.logout();\r\n    this.usuarioLogueado = {};\r\n    this.router.navigateByUrl('');\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"card col-4\\\" *ngFor=\\\"let veh of muestraVehicles\\\">\\r\\n      <div class=\\\"card-header\\\">{{veh.marca}} {{veh.modelo}} </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <img class=\\\"card-img-top\\\" [src]=\\\"veh.pathimagen\\\" alt=\\\"Imagen sin carga\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"authService.userLoggedIn\\\" (click)=\\\"seleccionarReserva(veh)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#reservaModal\\\">Alquilar</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Zone modals -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reservaModal\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Reserva de vehículo</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div id=\\\"avisoReserva\\\"></div>\\r\\n        <form id=\\\"formReserva\\\" name=\\\"formReserva\\\" (ngSubmit)=\\\"agregarReserva()\\\">\\r\\n          <div class=\\\"form-group form-inline\\\">\\r\\n            <label>Usuario</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" disabled [(ngModel)]=\\\"authService.usuarioLogueado\\\" id=\\\"usuarioInput\\\" name=\\\"usuarioInput\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group form-inline\\\">\\r\\n            <label>Vehículo</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" disabled [(ngModel)]=\\\"resVehicle.modelo\\\" id=\\\"modeloInput\\\" name=\\\"modeloInput\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group form-inline\\\">\\r\\n            <label>Días</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"reserva.dias\\\" id=\\\"diasInput\\\" name=\\\"diasInput\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group form-inline\\\">\\r\\n            <label>Fecha renta</label>\\r\\n            <input class=\\\"form-control\\\" type=\\\"date\\\" [(ngModel)]=\\\"reserva.fechaRenta\\\" id=\\\"fechaInput\\\" name=\\\"fechaInput\\\">\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Hacer petición</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cerrar</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Vehiculo } from '../../models/vehiculo';\r\nimport { VehicleService } from '../../services/vehicleservice';\r\nimport { ReservaService } from '../../services/reservaservice';\r\nimport { Reserva } from '../../models/reserva';\r\nimport { AuthService } from '../../services/authservice';\r\ndeclare var jquery:any;\r\ndeclare var $:any;\r\n\r\n@Component({\r\n  selector: 'app-principal',\r\n  templateUrl: './principal.component.html',\r\n  styleUrls: ['./principal.component.css'],\r\n  providers: [ VehicleService, ReservaService ]\r\n})\r\nexport class PrincipalComponent implements OnInit {\r\n  arrayVehicles:Array<Vehiculo>;\r\n  muestraVehicles:Array<Vehiculo>;\r\n  resVehicle:Vehiculo;\r\n  reserva:Reserva;\r\n  constructor(private vehicleService:VehicleService, private reservaService: ReservaService, public authService: AuthService) { \r\n    this.muestraVehicles = new Array<Vehiculo>(); \r\n    this.reserva = new Reserva();   \r\n    this.resVehicle = new Vehiculo();\r\n    this.cargarVehiculos();\r\n  }\r\n\r\n  cargarVehiculos()\r\n  {\r\n    this.vehicleService.getVehiculo().subscribe(\r\n      result =>{\r\n        this.arrayVehicles = JSON.parse(result.vehiculos);\r\n        for(let obj of this.arrayVehicles)\r\n        {\r\n          if(obj.disponible) this.muestraVehicles.push(obj);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  seleccionarReserva(veh:Vehiculo)\r\n  {\r\n    this.resVehicle = veh;\r\n  }\r\n  agregarReserva()\r\n  {\r\n    this.reserva.usuario = this.authService.usuarioLogueado;\r\n    this.reserva.costoRenta = 0;\r\n    this.reserva.estado = \"Pendiente\";\r\n    this.reserva.vehiculo = this.resVehicle;\r\n    this.reservaService.createReserva(this.reserva).subscribe(\r\n      data =>\r\n      {\r\n        $('#avisoReserva').html(\"<div class='alert alert-info'>Se ha realizado la reserva correctamente, ahora espere la respuesta.</div>\");\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h4 class=\\\"card-header\\\">Registro Vehiculo</h4>\\r\\n  <form id=\\\"registroVehiculo\\\" (ngSubmit)=\\\"agregarVehiculo()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Patente\\\" id=\\\"patente\\\" name=\\\"patente\\\" [(ngModel)]=\\\"newVehicle.patente\\\"\\r\\n            required>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Marca\\\" id=\\\"marca\\\" name=\\\"marca\\\" [(ngModel)]=\\\"newVehicle.marca\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Modelo\\\" id=\\\"modelo\\\" name=\\\"modelo\\\" [(ngModel)]=\\\"newVehicle.modelo\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"imgVehiculo\\\">URL Imagen: </label>\\r\\n      <input id=\\\"imgVehiculo\\\" [(ngModel)]=\\\"newVehicle.pathimagen\\\" name=\\\"imgVehiculo\\\">\\r\\n    </div>\\r\\n    <div class=\\\"row justify-content-end\\\">\\r\\n      <button class=\\\"btn btn-info\\\" id=\\\"btnRegistrar\\\" type=\\\"submit\\\">Registrar Vehiculo</button>\\r\\n    </div>\\r\\n  </form>\\r\\n  <div class=\\\"card-footer\\\">\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <table class=\\\"table responsive\\\" [mfData]=\\\"arrayVehicles\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n    <thead>\\r\\n      <th>\\r\\n        <mfDefaultSorter by=\\\"id\\\">ID Vehiculo</mfDefaultSorter>\\r\\n      </th>\\r\\n      <th>\\r\\n        <mfDefaultSorter by=\\\"patente\\\">Patente</mfDefaultSorter>\\r\\n      </th>\\r\\n      <th>\\r\\n        <mfDefaultSorter by=\\\"marca\\\">Marca</mfDefaultSorter>\\r\\n      </th>\\r\\n      <th>\\r\\n        <mfDefaultSorter by=\\\"modelo\\\">Modelo</mfDefaultSorter>\\r\\n      </th>\\r\\n      <th>\\r\\n        Imágenes\\r\\n      </th>\\r\\n      <th>Acciones</th>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let veh of mf.data\\\">\\r\\n        <td>{{veh.id}}</td>\\r\\n        <td>{{veh.patente}}</td>\\r\\n        <td>{{veh.marca}}</td>\\r\\n        <td>{{veh.modelo}}</td>\\r\\n        <td>\\r\\n          <img [src]=\\\"pathimagen\\\"> \\r\\n        </td>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-info\\\" (click)=\\\"modificarVeh(veh)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalEdit\\\">Modificar</button>\\r\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"borrarVehiculo(veh)\\\">Borrar</button>\\r\\n          \\r\\n        </td>\\r\\n\\r\\n      </tr>\\r\\n    </tbody>\\r\\n\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modalEdit\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edición de vehículo</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form id=\\\"registroVehiculo\\\" (ngSubmit)=\\\"actualizarVeh()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Patente\\\" id=\\\"patente\\\" name=\\\"patente\\\" [(ngModel)]=\\\"modVehicle.patente\\\"\\r\\n                  required>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Marca\\\" id=\\\"marca\\\" name=\\\"marca\\\" [(ngModel)]=\\\"modVehicle.marca\\\" required>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Modelo\\\" id=\\\"modelo\\\" name=\\\"modelo\\\" [(ngModel)]=\\\"modVehicle.modelo\\\" required>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"imgVehiculo\\\">URL Imagen: </label>\\r\\n            <input id=\\\"imgVehiculo\\\" [(ngModel)]=\\\"modVehicle.pathimagen\\\" name=\\\"imgVehiculo\\\">\\r\\n          </div>\\r\\n          <div class=\\\"row justify-content-end\\\">\\r\\n            <button class=\\\"btn btn-info\\\" id=\\\"btnRegistrar\\\" type=\\\"submit\\\">Guardar</button>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Vehiculo } from '../../models/vehiculo';\r\nimport { VehicleService } from '../../services/vehicleservice';\r\ndeclare var jquery:any;\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-alta-vehiculo',\r\n  templateUrl: './alta-vehiculo.component.html',\r\n  styleUrls: ['./alta-vehiculo.component.css'],\r\n  providers: [ VehicleService ]\r\n})\r\nexport class AltaVehiculoComponent implements OnInit {\r\n\r\n  arrayVehicles:Array<Vehiculo>;\r\n  newVehicle:Vehiculo;\r\n  modVehicle:Vehiculo;\r\n  constructor(private vehService:VehicleService) { \r\n    this.cargarVehiculos();\r\n    this.newVehicle = new Vehiculo();\r\n    this.modVehicle = new Vehiculo();\r\n    \r\n  }\r\n\r\n  borrarVehiculo(veh:Vehiculo){\r\n    this.vehService.eliminarVehiculo(veh).subscribe(\r\n      data =>\r\n      {\r\n        this.cargarVehiculos();\r\n        $('#avisoBorrado').html(\"<div class='alert alert-info'>Se ha borrado con éxito el vehículo ID \" + veh.id + \" </div>\");\r\n      }\r\n    );\r\n  }\r\n  actualizarVeh()\r\n  {\r\n    this.vehService.updateVehiculo(this.modVehicle).subscribe(\r\n      result=>{\r\n        this.cargarVehiculos();\r\n        $('#avisoModificado').html(\"<div class='alert alert-info'>Se ha modificado con éxito el vehículo ID \" + this.modVehicle.id + \" </div>\");\r\n\r\n      },\r\n      error =>{\r\n\r\n      }\r\n    );\r\n  }\r\n  modificarVeh(veh:Vehiculo)\r\n  {\r\n    this.modVehicle = new Vehiculo(veh.id, veh.patente, veh.marca, veh.modelo, veh.pathimagen, veh.disponible);\r\n  }\r\n\r\n  cargarVehiculos()\r\n  {\r\n    this.vehService.getVehiculo().subscribe(\r\n      result=>{\r\n        this.arrayVehicles = JSON.parse(result.vehiculos);\r\n      },\r\n      error =>{\r\n\r\n      }\r\n    );\r\n  }\r\n  agregarVehiculo(){\r\n    this.vehService.createVehiculo(this.newVehicle).subscribe(\r\n      data =>\r\n      {\r\n        this.cargarVehiculos();\r\n      },\r\n      error =>{\r\n\r\n      }\r\n    );\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"bg-light\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h4>Registro de usuarios</h4>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div id=\\\"avisoAgregado\\\"></div>\\r\\n\\r\\n    <form (ngSubmit)=\\\"agregarUsuario()\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"apellido\\\">Ingrese apellido</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"apellido\\\" [(ngModel)]=\\\"newUsuario.apellido\\\" placeholder=\\\"Ingrese apellido\\\"\\r\\n            id=\\\"apellido\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"nombre\\\">Ingrese nombres</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"newUsuario.nombres\\\" placeholder=\\\"Ingrese nombres\\\" id=\\\"nombre\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"dni\\\">Ingrese dni</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"dni\\\" [(ngModel)]=\\\"newUsuario.dni\\\" placeholder=\\\"###########\\\" id=\\\"dni\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"telefono\\\">Ingrese telefono</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"telefono\\\" [(ngModel)]=\\\"newUsuario.telefono\\\" placeholder=\\\"###########\\\" id=\\\"telefono\\\">\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"contrasena\\\"> Ingrese contraseña</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contrasena\\\" id=\\\"contrasena\\\" [(ngModel)]=\\\"newUsuario.password\\\" placeholder=\\\"***************\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"usuario\\\">Ingrese usuario</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"usuario\\\" placeholder=\\\"xxx619\\\" [(ngModel)]=\\\"newUsuario.usuario\\\" id=\\\"usuario\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"email\\\">Ingrese email</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"newUsuario.email\\\" placeholder=\\\"usuario@compañia.com\\\" id=\\\"email\\\">\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <label for=\\\"selectv\\\" class=\\\"col-sm-4 col-form-label\\\">Registrar como:</label>\\r\\n          <select id=\\\"selectv\\\" name=\\\"selectv\\\" class=\\\"custom-select mr-sm-2\\\" [(ngModel)]=\\\"newUsuario.perfil\\\">\\r\\n            <option selected value=\\\"cliente\\\">Cliente</option>\\r\\n            <option value=\\\"administrativo\\\">Administrativo</option>\\r\\n            <option value=\\\"administrador\\\">Administrador</option>\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Registrar usuario</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n            <button type=\\\"reset\\\" class=\\\" btn btn-primary  \\\">Limpiar</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div id=\\\"avisoBorrado\\\"></div>\\r\\n\\r\\n    <table class=\\\"table responsive\\\" [mfData]=\\\"arrayUsuarios\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n      <thead>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"usuario\\\">Usuario</mfDefaultSorter>\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"apellido\\\">Apellido</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"nombres\\\">Nombres</mfDefaultSorter>\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"perfil\\\">Perfil</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"email\\\">email</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"telefono\\\">Telefono</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"password\\\">Contraseña</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n        <th>\\r\\n          Acciones\\r\\n        </th>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let user of mf.data\\\">\\r\\n          <td>{{ user.usuario }}</td>\\r\\n          <td>{{user.apellido }}</td>\\r\\n          <td>{{user.nombres}}</td>\\r\\n          <td>{{user.perfil}}</td>\\r\\n          <td>{{user.email}}</td>\\r\\n          <td>{{user.telefono}}</td>\\r\\n          <td>{{user.password}}</td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"modificarUsuario(user)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalEdit\\\">Modificar</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"borrarUsuario(user)\\\">Eliminar</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <td colspan=\\\"4\\\">\\r\\n            <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </tfoot>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modalEdit\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edición de vehículo</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div id=\\\"avisoModificado\\\"></div>\\r\\n        <form (ngSubmit)=\\\"actualizarUsuario()\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"apellido\\\">Ingrese apellido</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"apellido\\\" [(ngModel)]=\\\"modUsuario.apellido\\\" placeholder=\\\"Ingrese apellido\\\"\\r\\n                id=\\\"apellido\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"nombre\\\">Ingrese nombres</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nombre\\\" [(ngModel)]=\\\"modUsuario.nombres\\\" placeholder=\\\"Ingrese nombres\\\" id=\\\"nombre\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"dni\\\">Ingrese dni</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"dni\\\" [(ngModel)]=\\\"modUsuario.dni\\\" placeholder=\\\"###########\\\" id=\\\"dni\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"telefono\\\">Ingrese telefono</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"telefono\\\" [(ngModel)]=\\\"modUsuario.telefono\\\" placeholder=\\\"###########\\\" id=\\\"telefono\\\">\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"contrasena\\\"> Ingrese contraseña</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"contrasena\\\" id=\\\"contrasena\\\" [(ngModel)]=\\\"modUsuario.password\\\" placeholder=\\\"***************\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"usuario\\\">Ingrese usuario</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"usuario\\\" placeholder=\\\"xxx619\\\" [(ngModel)]=\\\"modUsuario.usuario\\\" id=\\\"usuario\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"email\\\">Ingrese email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"modUsuario.email\\\" placeholder=\\\"usuario@compañia.com\\\" id=\\\"email\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <label for=\\\"selectv\\\" class=\\\"col-sm-4 col-form-label\\\">Registrar como:</label>\\r\\n              <select id=\\\"selectv\\\" name=\\\"selectv\\\" class=\\\"custom-select mr-sm-2\\\" [(ngModel)]=\\\"modUsuario.perfil\\\">\\r\\n                <option selected value=\\\"cliente\\\">Cliente</option>\\r\\n                <option value=\\\"administrativo\\\">Administrativo</option>\\r\\n                <option value=\\\"administrador\\\">Administrador</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Registrar usuario</button>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n                <button type=\\\"reset\\\" class=\\\" btn btn-primary  \\\">Limpiar</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Usuario } from '../../models/usuario';\r\nimport { UsuarioService } from '../../services/usuarioservice';\r\ndeclare var jquery:any;  \r\ndeclare var $:any;\r\n\r\n@Component({\r\n  selector: 'app-ausuarios',\r\n  templateUrl: './ausuarios.component.html',\r\n  styleUrls: ['./ausuarios.component.css'],\r\n  providers: [ UsuarioService ]\r\n})\r\nexport class AusuariosComponent implements OnInit {\r\n\r\n  newUsuario :Usuario;\r\n  modUsuario : Usuario;\r\n  arrayUsuarios: Array<Usuario>;\r\n  \r\n  constructor(private userService:UsuarioService) {\r\n    this.newUsuario = new Usuario();\r\n    this.modUsuario = new Usuario();\r\n    this.cargarUsuarios();\r\n   }\r\n\r\n  agregarUsuario()\r\n  {\r\n    this.userService.createUsuario(this.newUsuario).subscribe(\r\n      result =>{\r\n        this.cargarUsuarios();\r\n        $('#avisoAgregado').html(\"<div class='alert alert-info'>Se ha agregado con éxito un usuario</div>\");\r\n      }\r\n    );\r\n\r\n  }\r\n  actualizarUsuario()\r\n  {\r\n    this.userService.updateUsuario(this.modUsuario).subscribe(\r\n      data =>\r\n      {\r\n        this.cargarUsuarios();\r\n        $('#avisoActualizado').html(\"<div class='alert alert-info'>Se ha actualizado el usuario '\" + this.modUsuario.usuario +\"' </div>\");\r\n     \r\n      }\r\n    );\r\n  }\r\n  borrarUsuario(del:Usuario)\r\n  {\r\n    this.userService.eliminarUsuario(del).subscribe(\r\n      data=>{\r\n        $('#avisoBorrado').html(\"<div class='alert alert-info'>Se ha borrado el usuario '\" + del.usuario +\"' </div>\");\r\n        this.cargarUsuarios();\r\n      },\r\n      error=>\r\n      {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  modificarUsuario(mod:Usuario)\r\n  {\r\n    this.modUsuario = new Usuario(mod.id, mod.apellido, mod.nombres, mod.dni, mod.email, mod.telefono, mod.usuario, mod.password, mod.perfil);\r\n  }\r\n  cargarUsuarios()\r\n  {\r\n    this.userService.getUsuario().subscribe(\r\n      result =>\r\n      {\r\n        this.arrayUsuarios = JSON.parse(result.usuarios);\r\n      },\r\n      error =>\r\n      {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-4 offset-4\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h6>ACCESO AL SISTEMA</h6>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form (ngSubmit)=\\\"iniciarSesion()\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"inputEmail\\\" class=\\\"col-sm-4 col-form-label\\\">Usuario:</label>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" name=\\\"inputEmail\\\" [(ngModel)]=\\\"loginForm.username\\\" placeholder=\\\"Ingrese usuario\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"inputPassword\\\" class=\\\"col-sm-4 col-form-label\\\">Contraseña:</label>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword\\\" name=\\\"inputPassword\\\" [(ngModel)]=\\\"loginForm.password\\\" placeholder=\\\"Ingrese Contraseña\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Iniciar sesion</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../../services/authservice';\r\nimport { Usuario } from '../../models/usuario';\r\ndeclare var jquery:any;\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: any = {};\r\n  usuarioLogueado = {};\r\n  returnUrl: string;\r\n  constructor(private route:ActivatedRoute, private router: Router, private authService:AuthService) {\r\n    this.usuarioLogueado = localStorage.getItem(\"usuarioLogueado\");\r\n    console.log(this.usuarioLogueado);\r\n\r\n  }\r\n\r\n  \r\n  iniciarSesion()\r\n  {\r\n    this.authService.login(this.loginForm.username, this.loginForm.password).subscribe(\r\n      data => \r\n      {\r\n        let user = data;\r\n        console.log(user);\r\n        if(user)\r\n        {\r\n          if(user.username != \"\"){\r\n            this.authService.userLoggedIn = true;\r\n            localStorage.setItem(\"usuarioLogueado\", JSON.stringify(user));\r\n            localStorage.setItem(\"perfil\", user.perfil);\r\n            this.authService.perfil = user.perfil;\r\n            this.authService.nombreLogueado = user.username;\r\n            this.authService.usuarioLogueado = new Usuario(user.id, user.apellido, user.nombres, user.dni, user.email, user.telefono, user.username, \"NELSON\", user.perfil);\r\n            this.router.navigateByUrl('');\r\n          }\r\n          else\r\n          {\r\n            $('#alertaLogin').html(\"<div class='alert alert-danger'>Usuario y/o contraseña incorrectos.</div>\");\r\n          }\r\n        }\r\n      },\r\n      error =>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';    \r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>funciona\\r\\n  \\r\\n</h1>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-muestra-vehiculos',\r\n  templateUrl: './muestra-vehiculos.component.html',\r\n  styleUrls: ['./muestra-vehiculos.component.css']\r\n})\r\nexport class MuestraVehiculosComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"#idNovedad,#txtVehiculo,#txtmsj,#btnEnviar,#btnCerrar{\\r\\n    border-radius: 0;\\r\\n}\\r\\n#btnEnviar{\\r\\n    float: right;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card\\\" *ngIf=\\\"authService.perfil == 'cliente'\\\">\\r\\n    <div class=\\\"card-header\\\">Agregar novedad</div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div id=\\\"alertaEnviado\\\"></div>\\r\\n      <form (ngSubmit)=\\\"agregarNovedad()\\\">\\r\\n        <div class=\\\"form-group form-inline\\\">\\r\\n          <label>Mensaje</label>\\r\\n          <textarea class=\\\"form-control\\\" id=\\\"msj\\\" name=\\\"msj\\\" [(ngModel)]=\\\"newNovedad.Texto\\\"></textarea>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Enviar</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card\\\" *ngIf=\\\"authService.perfil != 'cliente'\\\">\\r\\n      <table class=\\\"table responsive\\\" [mfData]=\\\"arrayNovedades\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n        <thead>\\r\\n            <th>\\r\\n                <mfDefaultSorter by=\\\"Usuario.usuario\\\">Usuario</mfDefaultSorter>\\r\\n              </th>\\r\\n              <th>\\r\\n                <mfDefaultSorter by=\\\"Texto\\\">Novedad</mfDefaultSorter>\\r\\n      \\r\\n              </th>\\r\\n              <th>\\r\\n                <mfDefaultSorter by=\\\"estado\\\">Estado</mfDefaultSorter>\\r\\n              </th>\\r\\n              <th>\\r\\n                Acciones\\r\\n              </th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let nov of mf.data\\\">\\r\\n            <td>{{nov.Usuario.usuario}}</td>\\r\\n            <td>{{nov.Texto}}</td>\\r\\n            <td>{{nov.estado}}</td>\\r\\n            <td>\\r\\n              <button type=\\\"button\\\" (click)=\\\"revisarNovedad(nov)\\\" class=\\\"btn btn-info\\\">Procesar</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Novedad } from '../../models/novedad';\r\nimport { NovedadService } from '../../services/novedadservice';\r\nimport { AuthService } from '../../services/authservice';\r\ndeclare var jquery:any;\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-novedades',\r\n  templateUrl: './novedades.component.html',\r\n  styleUrls: ['./novedades.component.css'],\r\n  providers: [ NovedadService]\r\n})\r\nexport class NovedadesComponent implements OnInit {\r\n \r\n  newNovedad:Novedad;\r\n  arrayNovedades:Array<Novedad>;\r\n  constructor(private novedadService:NovedadService, public authService:AuthService) {\r\n    this.newNovedad = new Novedad();\r\n    \r\n   }\r\n  cargarNovedades()\r\n  {\r\n    this.novedadService.getNovedad().subscribe(\r\n      result =>\r\n      {\r\n        this.arrayNovedades = JSON.parse(result.novedades);\r\n      }\r\n    );\r\n  }\r\n\r\n  revisarNovedad(nov:Novedad)\r\n  {\r\n    nov.estado = \"procesado\";\r\n    this.novedadService.updateNovedad(nov).subscribe(\r\n      result=>\r\n      {\r\n        $('#alertaRevisado').html(\"<div class='alert alert-info'>Se ha cambiado el estado de la novedad \" + nov.id + \"</div>\");\r\n      }\r\n    );\r\n  }\r\n  \r\n  agregarNovedad()\r\n  {\r\n    this.newNovedad.estado = \"pendiente\";\r\n    this.newNovedad.Usuario = this.authService.usuarioLogueado;\r\n    this.novedadService.createNovedad(this.newNovedad).subscribe(\r\n      result=>{\r\n        $('#alertaEnviado').html(\"<div class='alert alert-info'>Se ha enviado su novedad.</div>\");\r\n      } );\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h3>Registro de usuarios</h3>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div id=\\\"avisoAgregado\\\"></div>\\r\\n    <form (ngSubmit)=\\\"agregarReserva()\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"usuarioReserva\\\">Usuario</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"usuarioID\\\" id=\\\"selectVeh\\\" name=\\\"selectVeh\\\">\\r\\n            <option *ngFor=\\\"let user of arrayUsuarios\\\" [value]=\\\"user.id\\\">{{user.usuario}}</option>\\r\\n          </select>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <label for=\\\"usuarioReserva\\\">Vehiculo</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"vehID\\\" id=\\\"selectVeh\\\" name=\\\"selectVeh\\\">\\r\\n              <option *ngFor=\\\"let veh of arrayVehicles\\\" [value]=\\\"veh.id\\\">{{veh.modelo}}</option>\\r\\n            </select>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"costoReserva\\\">Ingrese Costo</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"costoReserva\\\" id=\\\"costoreserva\\\" placeholder=\\\"$$$$\\\" id=\\\"costoReserva\\\" [(ngModel)]=\\\"newReserva.costoRenta\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <label for=\\\"fechaReserva\\\">Fecha de Reserva</label>\\r\\n\\r\\n          <input type='date' class=\\\"form-control\\\" id='datetimepicker4' name=\\\"datetimepicker4\\\" [(ngModel)]=\\\"newReserva.fechaRenta\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-3\\\">\\r\\n          <label for=\\\"diasReserva\\\">Cantidad de dias</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"diasReserva\\\" id=\\\"diasReserva\\\" placeholder=\\\"**\\\" id=\\\"diasReserva\\\" [(ngModel)]=\\\"newReserva.dias\\\">\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label>Estado</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"estadoSelect\\\" name=\\\"estadoSelect\\\" [(ngModel)]=\\\"newReserva.estado\\\">\\r\\n          <option value=\\\"pendiente\\\">Pendiente</option>\\r\\n          <option value=\\\"aceptado\\\">Aceptado</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"form-control\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Reservar</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <div id=\\\"avisoBorrado\\\"></div>\\r\\n    <table class=\\\"table responsive\\\" [mfData]=\\\"arrayReservas\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n      <thead>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"usuario.usuario\\\">Usuario</mfDefaultSorter>\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"vehiculo.modelo\\\">Vehiculo</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"costoRenta\\\">Costo</mfDefaultSorter>\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"fechaRenta\\\">Fecha</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"dias\\\">Días</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n        <th>\\r\\n          <mfDefaultSorter by=\\\"estado\\\">Estado</mfDefaultSorter>\\r\\n\\r\\n        </th>\\r\\n        <th>\\r\\n          Acciones\\r\\n        </th>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let res of mf.data\\\">\\r\\n          <td>{{res.usuario.usuario}}</td>\\r\\n          <td>{{res.vehiculo.modelo}}</td>\\r\\n          <td>{{res.costoRenta}}</td>\\r\\n          <td>{{res.fechaRenta}}</td>\\r\\n          <td>{{res.dias}}</td>\\r\\n          <td>{{res.estado}}</td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"modificarReserva(res)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modalEdit\\\">Modificar</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"borrarReserva(res)\\\">Eliminar</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n        <tr>\\r\\n          <td colspan=\\\"4\\\">\\r\\n            <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </tfoot>\\r\\n    </table>\\r\\n  -->\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"modalEdit\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edición de reserva</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div id=\\\"avisoActualizado\\\"></div>\\r\\n        <form (ngSubmit)=\\\"actualizarReserva()\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"usuarioReserva\\\">Usuario</label>\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"usuarioID\\\" id=\\\"selectVeh\\\" name=\\\"selectVeh\\\">\\r\\n                <option *ngFor=\\\"let user of arrayUsuarios\\\" [value]=\\\"user.id\\\">{{user.nombres}}</option>\\r\\n              </select>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-4\\\">\\r\\n                <label for=\\\"usuarioReserva\\\">Vehiculo</label>\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"vehID\\\" id=\\\"selectVeh\\\" name=\\\"selectVeh\\\">\\r\\n                  <option *ngFor=\\\"let veh of arrayVehicles\\\" [value]=\\\"veh.id\\\">{{veh.modelo}}</option>\\r\\n                </select>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"costoReserva\\\">Ingrese Costo</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"costoReserva\\\" id=\\\"costoreserva\\\" placeholder=\\\"$$$$\\\" id=\\\"costoReserva\\\" [(ngModel)]=\\\"modReserva.costoRenta\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <label for=\\\"fechaReserva\\\">Fecha de Reserva</label>\\r\\n\\r\\n              <input type='date' class=\\\"form-control\\\" id='datetimepicker4' name=\\\"datetimepicker4\\\" [(ngModel)]=\\\"modReserva.fechaRenta\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <label for=\\\"diasReserva\\\">Cantidad de dias</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"diasReserva\\\" id=\\\"diasReserva\\\" placeholder=\\\"**\\\" id=\\\"diasReserva\\\" [(ngModel)]=\\\"modReserva.dias\\\">\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label>Estado</label>\\r\\n            <select class=\\\"form-control\\\" id=\\\"estadoSelect\\\" name=\\\"estadoSelect\\\" [(ngModel)]=\\\"modReserva.estado\\\">\\r\\n              <option value=\\\"pendiente\\\">Pendiente</option>\\r\\n              <option value=\\\"aceptado\\\">Aceptado</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-control\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Actualizar</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Usuario } from '../../models/usuario';\r\nimport { Vehiculo } from '../../models/vehiculo';\r\nimport { Reserva } from '../../models/reserva';\r\nimport { UsuarioService } from '../../services/usuarioservice';\r\nimport { ReservaService } from '../../services/reservaservice';\r\nimport { VehicleService } from '../../services/vehicleservice';\r\ndeclare var jquery:any;\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-reserva',\r\n  templateUrl: './reserva.component.html',\r\n  styleUrls: ['./reserva.component.css'],\r\n  providers: [ UsuarioService, ReservaService, VehicleService]\r\n})\r\nexport class ReservaComponent implements OnInit {\r\n  arrayUsuarios:Array<Usuario>;\r\n  arrayReservas:Array<Reserva>;\r\n  arrayVehicles:Array<Vehiculo>;\r\n  newReserva:Reserva;\r\n  modReserva:Reserva;\r\n  vehID:number;\r\n  usuarioID:number;\r\n\r\n  constructor(private userService:UsuarioService, private reservaService:ReservaService, private vehService:VehicleService) { \r\n    this.modReserva = new Reserva();\r\n    this.newReserva = new Reserva();\r\n    this.cargarUsuarios();\r\n    this.cargarReservas();\r\n    this.cargarVehiculos();\r\n  }\r\n\r\n\r\n  borrarReserva(del:Reserva){\r\n    this.reservaService.eliminarReserva(del).subscribe(\r\n      data=>\r\n      {\r\n        $('#avisoBorrado').html(\"<div class='alert alert-info'>Se ha borrado la reserva \" + this.modReserva.id + \"</div>\");\r\n        this.cargarReservas();        \r\n      }\r\n    );\r\n  }\r\n  actualizarReserva()\r\n  {\r\n    let veh:Vehiculo;\r\n    let user:Usuario;\r\n    for(veh of this.arrayVehicles)\r\n    {\r\n      if(veh.id == this.vehID) break;\r\n    }\r\n    for(user of this.arrayUsuarios)\r\n    {\r\n      if(user.id == this.usuarioID) break;\r\n    }\r\n    this.modReserva.usuario = user;\r\n    this.modReserva.vehiculo = veh;\r\n\r\n    this.reservaService.updateReserva(this.modReserva).subscribe(\r\n      data =>\r\n      {\r\n        $('#avisoModificado').html(\"<div class='alert alert-info'>Se ha modificado con éxito la reserva \" + this.modReserva.id + \"</div>\");\r\n        this.cargarReservas();\r\n        \r\n      }\r\n    );\r\n  }\r\n\r\n  modificarReserva(mod:Reserva)\r\n  {\r\n    this.modReserva = mod;\r\n  }\r\n\r\n  agregarReserva()\r\n  {\r\n    let veh:Vehiculo;\r\n    let user:Usuario;\r\n    for(veh of this.arrayVehicles)\r\n    {\r\n      if(veh.id == this.vehID) break;\r\n    }\r\n    for(user of this.arrayUsuarios)\r\n    {\r\n      if(user.id == this.usuarioID) break;\r\n    }\r\n    this.newReserva.usuario = user;\r\n    this.newReserva.vehiculo = veh;\r\n\r\n    this.reservaService.createReserva(this.newReserva).subscribe(\r\n      result =>\r\n      {\r\n        $('#avisoAgregado').html(\"<div class='alert alert-info'>Se ha agregado una nueva reserva</div>\");\r\n        this.cargarReservas();\r\n      }\r\n    );\r\n  }\r\n  \r\n  cargarReservas()\r\n  {\r\n    this.reservaService.getReserva().subscribe(\r\n      result =>\r\n      {\r\n        this.arrayReservas = JSON.parse(result.reservas);\r\n      },\r\n      error =>\r\n      {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n  cargarVehiculos()\r\n  {\r\n    this.vehService.getVehiculo().subscribe(\r\n      result=>{\r\n        this.arrayVehicles = JSON.parse(result.vehiculos);\r\n      },\r\n      error =>{\r\n\r\n      }\r\n    );\r\n  }\r\n  cargarUsuarios()\r\n  {\r\n    this.userService.getUsuario().subscribe(\r\n      result =>\r\n      {\r\n        this.arrayUsuarios = JSON.parse(result.usuarios);\r\n      },\r\n      error =>\r\n      {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Usuario } from \"./usuario\";\r\n\r\nexport class Novedad\r\n{\r\n    \r\n    id: number;\r\n    Usuario: Usuario;\r\n    Texto: string;\r\n    estado: string; \r\n    \r\n    constructor(id?: number, Usuario?: Usuario, Texto?: string, estado?: string){\r\n        this.id = id;\r\n        this.Usuario = Usuario;\r\n        this.Texto = Texto;\r\n        this.estado = estado;\r\n    } \r\n    \r\n}","import { Vehiculo } from \"./vehiculo\";\r\nimport { Usuario } from \"./usuario\";\r\n\r\nexport class Reserva\r\n{\r\n    id: number;\r\n    usuario: Usuario;\r\n    vehiculo: Vehiculo;\r\n    dias: number;\r\n    costoRenta: number;\r\n    fechaRenta: Date;\r\n    estado: string ;\r\n\r\n    constructor(id?: number,usuario?: Usuario, vehiculo?: Vehiculo, dias?: number, costoRenta?: number,fechaRenta?: Date, estado?: string )\r\n    {\r\n        this.id = id;\r\n        this.usuario = usuario;\r\n        this.vehiculo = vehiculo;\r\n        this.dias = dias;\r\n        this.costoRenta = costoRenta;\r\n        this.fechaRenta = fechaRenta;\r\n        this.estado = estado;\r\n    }\r\n    \r\n}","export class Usuario\r\n{\r\n\r\n\r\n    id: number;\r\n    apellido: string;\r\n    nombres: string;\r\n    dni: number;\r\n    email: string;\r\n    telefono: number;\r\n    usuario: string;\r\n    password: string;\r\n    perfil: string;\r\n    constructor(id?:number, apellido?: string, nombres?: string, dni?: number, email?: string,telefono?: number, usuario?: string, password?: string, perfil?: string)\r\n    {\r\n        this.id = id;\r\n        this.apellido = apellido;\r\n        this.nombres = nombres;\r\n        this.dni = dni;\r\n        this.email = email;\r\n        this.telefono = telefono;\r\n        this.usuario = usuario;\r\n        this.password = password;\r\n        this.perfil = perfil;\r\n    }\r\n}","export class Vehiculo \r\n{\r\n    id: number;\r\n    patente: number;\r\n    marca: string;\r\n    modelo: string;\r\n    pathimagen: string;\r\n    disponible: boolean;\r\n    constructor(id?: number, patente?: number, marca?: string, modelo?: string, pathimagen?: string, disponible?: boolean)\r\n    {\r\n        this.id = id;\r\n        this.patente = patente;\r\n        this.marca = marca;\r\n        this.modelo = modelo;\r\n        this.pathimagen = pathimagen;\r\n        this.disponible= disponible;\r\n        \r\n    }\r\n    \r\n\r\n}","import { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PrincipalComponent } from './components/principal/principal.component';\r\nimport { LoginComponent } from './componetns/login/login.component';\r\nimport { AltaVehiculoComponent } from './componetns/alta-vehiculo/alta-vehiculo.component';\r\nimport { AusuariosComponent } from './componetns/ausuarios/ausuarios.component';\r\nimport { NovedadesComponent } from './componetns/novedades/novedades.component';\r\nimport { ReservaComponent } from './componetns/reserva/reserva.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PrincipalComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'vehiculos', component: AltaVehiculoComponent},\r\n  {path: 'ausuarios', component: AusuariosComponent},\r\n  { path: 'novedades', component:NovedadesComponent},\r\n  { path: 'reserva', component:ReservaComponent}\r\n];\r\n\r\nexport const Rutas_App = RouterModule.forRoot(routes);","import { Injectable } from '@angular/core';\r\n\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport { Usuario } from '../models/usuario';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  userLoggedIn : boolean = false;\r\n  nombreLogueado:string;\r\n  perfil:string;\r\n  usuarioLogueado : Usuario;\r\n  constructor(private http:Http) { }\r\n\r\n  login(username: string, password: string) {\r\n      return this.http.post('http://localhost/proyectoFinal/web/app_dev.php/usuario/authenticate', JSON.stringify({ username: username, password: password }))\r\n          .map(res => res.json());\r\n  }\r\n\r\n  logout() {\r\n      localStorage.removeItem('usuarioLogueado');\r\n      this.userLoggedIn = false;\r\n    this.usuarioLogueado = null;\r\n\r\n  } \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\r\nimport \"rxjs/add/operator/map\";\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class NovedadService {\r\n    constructor(private _http: Http) {\r\n\r\n    }\r\n    getNovedad()\r\n    {\r\n        return this._http.get(\"http://localhost/proyectoFinal/web/app_dev.php/novedad/\").map(res => res.json());\r\n    }\r\n\r\n    createNovedad(novedad) {\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let body = JSON.stringify(novedad);\r\n        return this._http.post('http://localhost/proyectoFinal/web/app_dev.php/novedad/new', body, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n    updateNovedad(novedad)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(novedad);\r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/novedad/\" + novedad.id + \"/edit\"\r\n      return this._http.post(postURL, body, options).map((res: Response) => res.json());\r\n    }\r\n\r\n    eliminarNovedad(novedad)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(novedad);\r\n  \r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/novedad/\"+novedad.id;\r\n      return this._http.delete(postURL, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\r\nimport \"rxjs/add/operator/map\";\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class ReservaService {\r\n    constructor(private _http: Http) {\r\n\r\n    }\r\n    getReserva()\r\n    {\r\n        return this._http.get(\"http://localhost/proyectoFinal/web/app_dev.php/reserva/\")\r\n        .map(res => res.json());\r\n    }\r\n\r\n    createReserva(reserva) {\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let body = JSON.stringify(reserva);\r\n        return this._http.post('http://localhost/proyectoFinal/web/app_dev.php/reserva/new', body, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n    updateReserva(reserva)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(reserva);\r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/reserva/\" + reserva.id + \"/edit\"\r\n      return this._http.post(postURL, body, options).map((res: Response) => res.json());\r\n    }\r\n    eliminarReserva(reserva)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(reserva);\r\n  \r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/reserva/\"+reserva.id;\r\n      return this._http.delete(postURL, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\r\nimport \"rxjs/add/operator/map\";\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class UsuarioService {\r\n    constructor(private _http: Http) {\r\n\r\n    }\r\n    getUsuario()\r\n    {\r\n        return this._http.get(\"http://localhost/proyectoFinal/web/app_dev.php/usuario/\")\r\n        .map(res => res.json());\r\n    }\r\n\r\n    createUsuario(usuario) {\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let body = JSON.stringify(usuario);\r\n        return this._http.post('http://localhost/proyectoFinal/web/app_dev.php/usuario/new', body, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n    updateUsuario(usuario)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(usuario);\r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/usuario/\" + usuario.id + \"/edit\"\r\n      return this._http.post(postURL, body, options).map((res: Response) => res.json());\r\n    }\r\n\r\n    eliminarUsuario(usuario)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(usuario);\r\n  \r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/usuario/\"+usuario.id;\r\n      return this._http.delete(postURL, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport {Http, Response, Headers, RequestOptions} from \"@angular/http\";\r\nimport \"rxjs/add/operator/map\";\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class VehicleService {\r\n    constructor(private _http: Http) {\r\n\r\n    }\r\n    getVehiculo()\r\n    {\r\n        return this._http.get(\"http://localhost/proyectoFinal/web/app_dev.php/vehiculo/\")\r\n        .map(res => res.json());\r\n    }\r\n\r\n    createVehiculo(vehiculo) {\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ headers: headers });\r\n        let body = JSON.stringify(vehiculo);\r\n        return this._http.post('http://localhost/proyectoFinal/web/app_dev.php/vehiculo/new', body, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n    updateVehiculo(vehiculo)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(vehiculo);\r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/vehiculo/\" + vehiculo.id + \"/edit\"\r\n      return this._http.post(postURL, body, options).map((res: Response) => res.json());\r\n    }\r\n    eliminarVehiculo(vehiculo)\r\n    {\r\n      let headers = new Headers({ 'Content-Type': 'application/json' });\r\n      let options = new RequestOptions({ headers: headers });\r\n      let body = JSON.stringify(vehiculo);\r\n  \r\n      let postURL = \"http://localhost/proyectoFinal/web/app_dev.php/vehiculo/\"+vehiculo.id;\r\n      return this._http.delete(postURL, options).map((res: Response) => res.json());\r\n    }\r\n    \r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}